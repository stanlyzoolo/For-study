# Функция для поиска индекса (важно!) наименьшего элемента массива в списке

def find_smallest(arr):
  # Определим список для хранения наименьшего значения
  smallest = [0]
  # Индексация элементов в списке начинается с нуля
  smallest_index = 0
  # Составляем тело цикла для перебора каждого элемента в списке и поиска наименьшего 
  for i in range (1, len(arr)):
    if arr[i] < smallest:
      smallest = arr[i]
      smallest_index = i
  return smallest_index

# Проверим работу функции сортировки

print (find_smallest([24, 12, 5, 198]))
#             Индексы: 0  1   2   3 
# Ответ:наименьшее значение находится
#                   в позиции 2.


# Алгоритм сортировки выбором (по возрастанию

def selection_sort (arr):
  # Создаем новый список для отсортированных элементов
  newArr = []
  # Составляем тело цикла для выбора наименьшего значения и дальнейшей сортировки 
  for i in range(len(arr)): 
    smallest = find_smallest(arr)
    # Инструкция ниже удаляет наименьшие элементы (значения) из полученного от пользователья списка arr и 
    # формирует из них новый отсортированный по возрастанию список newArr.
    newArr.append(arr.pop(smallest))
  return newArr
  
# Проверим работу функции сортировки выбором

print (selection_sort([24, 12, 5, 198]))
   
    
  
