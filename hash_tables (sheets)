# Хеш - функции
# Хеш - таблицы = хеш - функция + массив данных

# Хеш - функция должна: 
                    # быть последовательной;
                    # разным словам должны соответствовать разные числа;
# Хеш - функция:
                # связывает Название с одним ИНДЕКСОМ  --> место, где хранится информация
                # связывает разные Строки с разными идексами. 
                # знает размер массива и возвращает только действительные индексы.
# В Python хеш-таблицами являются Словари {}.

# Пример кода на основа избирательного участка
voted = {}
def check_voter(name):
  if voted.get (name):
      print ("Не допускать к голосованию")
   else:
      voted[name]=True
      print ("Допустить к голосованию")

# Кэширование - это хранение информации в хеш-таблицах (словарях {}).

# Пример кода запроса url при регулярном посещеннии страницы

cache = {}
def get_page (url):
  if cache.get (url):
    return cache[url]     # При наличии url в кэше сервер возвращает кэшированные данные
  else:
    data = get_data_from_server (url)
    cache[url] = data     # Если нет, то сохраним данные в кэше
    return data
    
 # Хеши хорошо подходят для решения задач:
  - моделирование отношений между объектами
  - устранение дубликатов
  - кэширование/запоминание данных вместо выполнения работы на сервере
  
 
    
